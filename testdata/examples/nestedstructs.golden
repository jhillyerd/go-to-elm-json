module NestedStructs exposing (NestedStructs, decoder, encode)

import Json.Decode as D
import Json.Decode.Pipeline as P
import Json.Encode as E


-- Generated by https://github.com/jhillyerd/go-to-elm-json


type alias NestedStructs =
    { outerName : String
    , innerValue1 : InnerStruct
    , innerValue2 : InnerStruct
    }


type alias InnerStruct =
    { value : String
    }


decoder : D.Decoder NestedStructs
decoder =
    D.succeed NestedStructs
        |> P.required "OuterName" D.string
        |> P.required "InnerValue1" innerStructDecoder
        |> P.required "InnerValue2" innerStructDecoder


encode : NestedStructs -> E.Value
encode r =
    E.object
        [ ("OuterName", E.string r.outerName)
        , ("InnerValue1", encodeInnerStruct r.innerValue1)
        , ("InnerValue2", encodeInnerStruct r.innerValue2)
        ]


innerStructDecoder : D.Decoder InnerStruct
innerStructDecoder =
    D.succeed InnerStruct
        |> P.required "Value" D.string


encodeInnerStruct : InnerStruct -> E.Value
encodeInnerStruct r =
    E.object
        [ ("Value", E.string r.value)
        ]


maybe : (a -> E.Value) -> Maybe a -> E.Value
maybe encoder =
    Maybe.map encoder >> Maybe.withDefault E.null
